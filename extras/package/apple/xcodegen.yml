name: VLC
options:
  bundleIdPrefix: org.videolan.vlc
  deploymentTarget:
    iOS: 9.0
configs:
  Debug: debug
  Release: release
  Debug-bitcode: debug
  DebugSimulator: debug
settings:
  configs:
    Debug:
      PBXCP_BITCODE_STRIP_MODE: replace-with-marker
      STRIP_BITCODE_FROM_COPIED_FILES: YES
    Debug-bitcode:
      STRIP_BITCODE_FROM_COPIED_FILES: NO
    Release:
      STRIP_BITCODE_FROM_COPIED_FILES: NO
      ENABLE_BITCODE: YES
      BITCODE_GENERATION_MODE: full
targets:
  VLCAutomake:
    type: ""
    platform: ${VLC_PLATFORM}
    legacy:
      toolPath: ${VLC_SRC_DIR}/extras/package/apple/xcode.sh
      passSettings: true
      workingDirectory: ${VLC_SRC_DIR}
    sources:
      - path: "${VLC_SRC_DIR}/src"
        excludes: "**/Makefile.in"
      - path: "${VLC_SRC_DIR}/include"
        excludes: "**/Makefile.in"
      - path: "${VLC_SRC_DIR}/modules"
        excludes: "**/Makefile.in"
      - path: "${VLC_SRC_DIR}/lib"
        excludes: "**/Makefile.in"
      - path: "${VLC_SRC_DIR}/contrib/src"
      - path: "${VLC_SRC_DIR}/contrib/bootstrap"
      - path: "${VLC_SRC_DIR}/doc"
        excludes: "**/Makefile.in"

  vlc_plugin:
    type: "framework"
    platform: ${VLC_PLATFORM}
    dependencies:
      - target: VLCAutomake
    info:
      path: "vlc_plugin/Info.plist"
    postBuildScripts:
      - name: Copy vlc_plugin library
        script: |
            INPUT_FILES=()
            BUILD_SUFFIX=""
            if [ "$(echo "${ENABLE_BITCODE}" | tr '[:upper:]' '[:lower:]')" = "yes" ]; then
                if [ -z "${BITCODE_GENERATION_MODE}" ]; then
                    BITCODE_GENERATION_MODE="full"
                fi
                BUILD_SUFFIX="-bitcode-${BITCODE_GENERATION_MODE}"
            fi
            for arch in ${ARCHS}; do
                input_file="${BUILT_PRODUCTS_DIR}/build-${PLATFORM_NAME}-${arch}${BUILD_SUFFIX}/build/modules/.libs/libvlc_plugin.dylib"
                echo " + Adding input $input_file"
                INPUT_FILES+=( "$input_file" )
            done
            lipo -create \
                -output "${BUILT_PRODUCTS_DIR}/vlc_plugin.framework/vlc_plugin" \
                "${INPUT_FILES[@]}"

  vlc:
    type: "library.static"
    platform: ${VLC_PLATFORM}
    dependencies:
      - target: VLCAutomake
    postBuildScripts:
      - name: Copy libvlc library
        script: |
            INPUT_FILES=()
            BUILD_SUFFIX=""
            if [ "$(echo "${ENABLE_BITCODE}" | tr '[:upper:]' '[:lower:]')" = "yes" ]; then
                if [ -z "${BITCODE_GENERATION_MODE}" ]; then
                    BITCODE_GENERATION_MODE="full"
                fi
                BUILD_SUFFIX="-bitcode-${BITCODE_GENERATION_MODE}"
            fi
            for arch in ${ARCHS}; do
                input_file="${BUILT_PRODUCTS_DIR}/build-${PLATFORM_NAME}-${arch}${BUILD_SUFFIX}/build/lib/.libs/libvlc.a"
                echo " + Adding input $input_file"
                INPUT_FILES+=( "$input_file" )
            done
            lipo -create \
                -output "${BUILT_PRODUCTS_DIR}/libvlc.a" \
                "${INPUT_FILES[@]}"

  vlccore:
    type: "framework"
    platform: ${VLC_PLATFORM}
    dependencies:
      - target: VLCAutomake
    info:
      path: "vlccore/Info.plist"
    sources:
      - path: ${VLC_SRC_DIR}/include/
        includes: "vlc_*.h"
        buildPhase: headers
        headerVisibility: public
    postBuildScripts:
      - name: Copy vlccore library
        script: |
            INPUT_FILES=()
            BUILD_SUFFIX=""
            if [ "$(echo "${ENABLE_BITCODE}" | tr '[:upper:]' '[:lower:]')" = "yes" ]; then
                if [ -z "${BITCODE_GENERATION_MODE}" ]; then
                    BITCODE_GENERATION_MODE="full"
                fi
                BUILD_SUFFIX="-bitcode-${BITCODE_GENERATION_MODE}"
            fi
            for arch in ${ARCHS}; do
                input_file="${BUILT_PRODUCTS_DIR}/build-${PLATFORM_NAME}-${arch}${BUILD_SUFFIX}/build/src/.libs/libvlccore.dylib"
                echo " + Adding input $input_file"
                INPUT_FILES+=( "$input_file" )
            done
            lipo -create \
                -output "${BUILT_PRODUCTS_DIR}/vlccore.framework/vlccore" \
                "${INPUT_FILES[@]}"
